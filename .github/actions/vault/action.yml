name: Vault 
description: vault

inputs:
  secrets-name:
    description: Vault Command to Execute
    required: true
  roleId:
    description: Vault roleId
    required: true
  secretId:
    description: Vault secretId
    required: true
  secrets-path:
    description: build-args
    required: true

runs:
  using: composite
  steps:
    - id: compute_secrets
      shell: bash
      run: |
        SECRETS=""
        IFS=':' read -r -a arrayPath <<< "$SECRET_PATH"
        IFS=':' read -r -a arrayName <<< "$SECRET_NAME"
        for i in "${!arrayPath[@]}"; do
          SECRETS+="secret/data/${arrayPath[i]} ${arrayName[i]} | secret_value_$i; "
        done
        echo ::set-output name=secrets::$SECRETS
      env:
        SECRET_PATH: ${{ inputs.secrets-path }}
        SECRET_NAME: ${{ inputs.secrets-name }}
    - name: Import Secrets
      id: secrets
      uses: hashicorp/vault-action@v2.3.1
      with:
        url: https://vault.outmind.fr
        method: approle
        roleId: ${{ inputs.roleId }}
        secretId: ${{ inputs.secretId }}
        secrets: ${{ steps.compute_secrets.outputs.secrets }}
    - name: Compute build-args
      id: build-args
      shell: bash
      run: |
        IFS=':' read -r -a names <<< "$SECRET_NAME"
        for i in "${!names[@]}"; do
          varname=secret_value_$i
          echo \"${names[i]}=${!varname}\" >> args
        done
        echo "BUILD_ARGS<<EOF" >> $GITHUB_ENV
        cat args >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
      env:
        SECRET_NAME: ${{ inputs.secrets-name }}
    - id: args
      shell: bash
      run: |
        echo "${{ env.BUILD_ARGS }}"

        